{"version":3,"file":"static/js/969.f5dd8e2b.chunk.js","mappings":"kOACA,EAA4B,8BAA5B,EAAmE,2BAAnE,EAAqG,yBAArG,EAA2I,+B,SCqE3I,EAhEmB,WAAO,IAAD,EACvB,GAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCC,EAAAA,EAAAA,UAAQ,UAACF,EAAaG,IAAI,gBAAlB,QAA8B,IAAxE,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAoCH,EAAAA,EAAAA,UAAS,IAA7C,eAAOI,EAAP,KAAmBC,EAAnB,KAiCA,OAVAC,EAAAA,EAAAA,YAAU,WACW,KAAfF,IACFG,EAAAA,EAAAA,IAAaL,GAAWM,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QAC9BJ,EAAcI,GACdN,EAAa,GAGd,GACJ,GAAE,KAGD,iBAAKO,UAAWC,EAAhB,WACE,kBAAMC,SA5BW,SAAAC,GACfA,GAAGA,EAAEC,iBACgB,KAArBZ,EAAUa,QAIdhB,EAAgB,CAAEiB,MAAOd,KACzBK,EAAAA,EAAAA,IAAaL,GAAWM,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QAC9B,GAAIA,EAAQQ,OAAS,EACnB,OAAOZ,EAAcI,GAEvBS,EAAAA,GAAAA,MAAY,sCACb,IACDf,EAAa,KAVXe,EAAAA,GAAAA,MAAY,kBAWf,EAcG,WACE,kBACEC,KAAK,OACLC,MAAOlB,EACPmB,YAAY,kBACZC,SAtCkB,SAAAT,GACxB,IAAMO,EAAQP,EAAEU,OAAOH,MAAMI,cAC7BrB,EAAaiB,EACd,KAqCK,mBAAQD,KAAK,SAAST,UAAWC,EAAjC,uBAIDP,IACC,wBACGA,EAAWqB,KAAI,SAAAC,GAAK,OACnB,eAAmBhB,UAAWC,EAA9B,UACE,SAAC,KAAD,CAASgB,GAAE,UAAKD,EAAME,IAAtB,UACE,iBAAMlB,UAAWC,EAAjB,SAAgCe,EAAMG,WAFjCH,EAAME,GADI,QAW9B,C","sources":["webpack://react-homework-template/./src/components/pages/MoviesPage.module.css?e3e5","components/pages/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MoviesPage_container__n1xaX\",\"button\":\"MoviesPage_button__TGi52\",\"link\":\"MoviesPage_link__AunPX\",\"movieTitle\":\"MoviesPage_movieTitle__WWspZ\"};","import { searchMovies } from '../services/movies-api';\nimport { useEffect, useState } from 'react';\nimport { NavLink, useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\nimport s from './MoviesPage.module.css';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movieName, setMovieName] = useState(searchParams.get('query') ?? '');\n  const [listMovies, setListMovies] = useState([]);\n\n  const handleMovieChange = e => {\n    const value = e.target.value.toLowerCase();\n    setMovieName(value);\n  };\n\n  const handleSubmit = e => {\n    if (e) e.preventDefault();\n    if (movieName.trim() === '') {\n      toast.error('Enter something');\n      return;\n    }\n    setSearchParams({ query: movieName });\n    searchMovies(movieName).then(({ results }) => {\n      if (results.length > 0) {\n        return setListMovies(results);\n      }\n      toast.error('Enter the corect input ☝️');\n    });\n    setMovieName('');\n  };\n\n  useEffect(() => {\n    if (listMovies !== '')\n      searchMovies(movieName).then(({ results }) => {\n        setListMovies(results);\n        setMovieName('');\n\n        // setSearchParams({ query: movieName });\n      });\n  }, []);\n\n  return (\n    <div className={s.container}>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={movieName}\n          placeholder=\"enter the title\"\n          onChange={handleMovieChange}\n        />\n        <button type=\"submit\" className={s.button}>\n          Search\n        </button>\n      </form>\n      {listMovies && (\n        <ul>\n          {listMovies.map(movie => (\n            <li key={movie.id} className={s.link}>\n              <NavLink to={`${movie.id}`}>\n                <span className={s.movieTitle}>{movie.title}</span>\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["useSearchParams","searchParams","setSearchParams","useState","get","movieName","setMovieName","listMovies","setListMovies","useEffect","searchMovies","then","results","className","s","onSubmit","e","preventDefault","trim","query","length","toast","type","value","placeholder","onChange","target","toLowerCase","map","movie","to","id","title"],"sourceRoot":""}